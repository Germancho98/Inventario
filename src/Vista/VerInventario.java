/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Vista;


import static com.sun.org.apache.xpath.internal.XPath.SELECT;
import static javax.swing.text.html.HTML.Tag.SELECT;
import Conexion.Conexion;
import Modelo.Inventario;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.ResultSetMetaData;
import java.sql.SQLException;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

/**
 *
 * @author Germancho
 */
public class VerInventario extends javax.swing.JFrame {
     
    /**
     * Creates new form VerInventario
     */ 
    DefaultTableModel modelo = new DefaultTableModel();
    public VerInventario() {
        initComponents();     
        this.setLocationRelativeTo(null);
        setResizable(false);
        try{
          //Llamamos la variable de la tabla y le enviamos el modelo
            TablaInven.setModel(modelo);
            //Prepara la consulta
            PreparedStatement ps = null;
            //Me permite ver los resultados
            ResultSet rs = null;
            java.sql.Connection con = conn.getConnection();
            //Creamos una consulta a nuestra tabla
            String sql = "SELECT idInventario,Numero,Marca,Procesador,Estado,Almacenamiento,MemoriaRAM,MAC,Accesorios FROM inventario";
            //preparo la consulta con la variable de conexión
            ps = con.prepareStatement(sql);
            //Esta variable me devuelve el número de registros de la tabla
            rs = ps.executeQuery();
            //Pasamos los resultados de la consulta
            ResultSetMetaData rsMd = (ResultSetMetaData) rs.getMetaData();
            //Determino cuantos datos me arroja la consulta
            int cantidadColumnas = rsMd.getColumnCount();
            //agrego las columnas al modelo
                modelo.addColumn("Código");
                modelo.addColumn("Numero");
                modelo.addColumn("Marca");
                modelo.addColumn("Procesador");
                modelo.addColumn("Estado");
                modelo.addColumn("Almacenamiento");
                modelo.addColumn("Ram");
                modelo.addColumn("MAC");
                modelo.addColumn("Accesorios");            
                //Establezco el ancho de las columnas del JTable
                int[] anchos = {50, 110, 110, 110,110,110,110,110,110};
                for (int i = 0; i < TablaInven.getColumnCount(); i++)
                {
                    TablaInven.getColumnModel().getColumn(i).setPreferredWidth(anchos[i]);
                }
                
                //Utilizo el while para recorrer los datos de la consulta
                while (rs.next())
                {
                    //Declaramos un arreglo de tipo objeto
                    Object[] filas = new Object[cantidadColumnas];
                    //Utilizamos un ciclo for para pasar todos los datos al tipo objeto
                      for (int i = 0; i < cantidadColumnas; i++)
                      {
                          filas[i] = rs.getObject(i + 1);
                      }
                      //agregamos los resultados al modelo
                        modelo.addRow(filas);
                }          
        }catch(SQLException ex)
        {
            System.err.println(ex.toString());
        }             
    }
    Inventario inv = new Inventario();   
    Conexion conn = new Conexion();
    
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        TablaInven = new javax.swing.JTable();
        jLabel2 = new javax.swing.JLabel();
        jTextField1 = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        cbMarca = new javax.swing.JComboBox<>();
        jLabel4 = new javax.swing.JLabel();
        cbPro = new javax.swing.JComboBox<>();
        jLabel5 = new javax.swing.JLabel();
        cbEstado = new javax.swing.JComboBox<>();
        jLabel6 = new javax.swing.JLabel();
        cbAlm = new javax.swing.JComboBox<>();
        jLabel7 = new javax.swing.JLabel();
        bxRam = new javax.swing.JComboBox<>();
        jLabel8 = new javax.swing.JLabel();
        txtmac = new javax.swing.JTextField();
        jLabel9 = new javax.swing.JLabel();
        cbAcces = new javax.swing.JComboBox<>();
        jLabel10 = new javax.swing.JLabel();
        jTextField3 = new javax.swing.JTextField();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setFont(new java.awt.Font("Tahoma", 0, 18)); // NOI18N
        jLabel1.setText("Equipos en el inventario");

        TablaInven.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "Codigo", "Numero", "Marca", "Procesador", "Estado", "Almacenamiento", "Ram", "Mac", "Accesorios"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Integer.class, java.lang.Integer.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false, false, false, false, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        TablaInven.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                TablaInvenMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(TablaInven);

        jLabel2.setText("Numero del equipo");

        jTextField1.setEnabled(false);
        jTextField1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jTextField1ActionPerformed(evt);
            }
        });

        jLabel3.setText("Marca");

        cbMarca.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione...", "LENOVO", "ACER", "HP", "MSI", "ASUS", "APPLE" }));
        cbMarca.setEnabled(false);

        jLabel4.setText("Procesador");

        cbPro.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione...", "AMD RAYZEN 5 3600", "AMD ATHLON", "AMD SEREA A PRO", "INTEL CORE 5 ", "INTEL CORE 7", "INTEL CORE 9" }));
        cbPro.setEnabled(false);

        jLabel5.setText("Estado");

        cbEstado.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione...", "Activo", "Inactivo" }));
        cbEstado.setEnabled(false);

        jLabel6.setText("Almacenamiento");

        cbAlm.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione...", "250 GB", "500 GB", "1 TERA", "2 TERAS" }));
        cbAlm.setEnabled(false);

        jLabel7.setText("Memoria Ram");

        bxRam.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione...", "4 GB", "8 GB", "12 GB", "16 GB", "32 GB", "64 GB" }));
        bxRam.setEnabled(false);

        jLabel8.setText("MAC");

        txtmac.setEnabled(false);
        txtmac.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtmacActionPerformed(evt);
            }
        });

        jLabel9.setText("Accesorios");

        cbAcces.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Seleccione...", "Mouse", "Morral ", "Guaya", "Cargador", "Todos" }));
        cbAcces.setEnabled(false);
        cbAcces.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cbAccesActionPerformed(evt);
            }
        });

        jLabel10.setText("Codigo");

        jTextField3.setEnabled(false);

        jButton1.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/edit.png"))); // NOI18N
        jButton1.setText("Editar");
        jButton1.setBorderPainted(false);
        jButton1.setEnabled(false);
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });

        jButton2.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/b_usrcheck.png"))); // NOI18N
        jButton2.setText("Nuevo");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });

        jButton3.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/broom (1).png"))); // NOI18N
        jButton3.setText("Limpiar");
        jButton3.setBorderPainted(false);
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });

        jButton4.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Img/undo.gif"))); // NOI18N
        jButton4.setText("Volver");
        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(214, 214, 214)
                        .addComponent(jLabel1))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(23, 23, 23)
                        .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 632, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(122, Short.MAX_VALUE))
            .addGroup(layout.createSequentialGroup()
                .addGap(52, 52, 52)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel10)
                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                        .addComponent(jLabel2)
                        .addComponent(jLabel4)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel8)
                            .addComponent(jLabel6))))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(cbAlm, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(cbPro, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jTextField1)
                    .addComponent(txtmac)
                    .addComponent(jTextField3))
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addGroup(layout.createSequentialGroup()
                        .addGap(44, 44, 44)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jLabel9)
                            .addComponent(jLabel7))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(bxRam, 0, 144, Short.MAX_VALUE)
                            .addComponent(cbAcces, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                    .addGroup(layout.createSequentialGroup()
                        .addGap(73, 73, 73)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addComponent(jLabel5)
                            .addComponent(jLabel3))
                        .addGap(18, 18, 18)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                            .addComponent(cbMarca, 0, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                            .addComponent(cbEstado, 0, 146, Short.MAX_VALUE))))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jButton1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton3, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(jButton4, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addGap(26, 26, 26))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(20, 20, 20)
                .addComponent(jLabel1)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jTextField3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel10))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 11, Short.MAX_VALUE)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(1, 1, 1)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel2)
                                    .addComponent(jTextField1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel4)
                                    .addComponent(cbPro, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel6)
                                    .addComponent(cbAlm, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(27, 27, 27)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(txtmac, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(jLabel8)
                                    .addComponent(jLabel9)
                                    .addComponent(cbAcces, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel3)
                                    .addComponent(cbMarca, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel5)
                                    .addComponent(cbEstado, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(18, 18, 18)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                                    .addComponent(jLabel7)
                                    .addComponent(bxRam, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))))
                        .addGap(42, 42, 42))
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(42, 42, 42)
                                .addComponent(jButton2))
                            .addComponent(jButton1))
                        .addGap(18, 18, 18)
                        .addComponent(jButton3)
                        .addGap(18, 18, 18)
                        .addComponent(jButton4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)))
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 215, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jTextField1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jTextField1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jTextField1ActionPerformed

    private void TablaInvenMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_TablaInvenMouseClicked
        // clic
        //Preparo la consulta
        this.jButton1.setEnabled(true);
        this.jTextField1.setEnabled(true);
        this.txtmac.setEnabled(true);
        this.cbMarca.setEnabled(true);
        this.cbPro.setEnabled(true);       
        this.cbEstado.setEnabled(true);
        this.cbAlm.setEnabled(true); 
        this.bxRam.setEnabled(true); 
        this.cbAcces.setEnabled(true); 
        PreparedStatement ps = null;
        ResultSet rs = null;
        try{       
                //Creamos un objeto para llamar la conexión
                Conexion cx = new Conexion();
                java.sql.Connection con = cx.getConnection();
                //Creo una variable que me capture el número de filas seleccionadas
                int Fila = TablaInven.getSelectedRow();
                String codigo = TablaInven.getValueAt(Fila, 0).toString();
                //Hago una consulta a la fila seleccionada y la almaceno en la variable ps
                ps = con.prepareStatement("SELECT * FROM inventario WHERE idInventario=?");
                ps.setString(1, codigo);              
                //Ejecuto la consulta
                rs = ps.executeQuery();
                //Recorro todas las filas de la tabla
                while (rs.next())
                {
                    jTextField3.setText(rs.getString(("idInventario")));
                    jTextField1.setText(rs.getString("Numero"));                   
                    cbMarca.setSelectedItem(rs.getString("Marca"));                    
                    cbPro.setSelectedItem(rs.getString("Procesador"));              
                    cbEstado.setSelectedItem(rs.getString("Estado"));
                    cbAlm.setSelectedItem(rs.getString("Almacenamiento"));              
                    bxRam.setSelectedItem(rs.getString("MemoriaRAM"));
                    txtmac.setText(rs.getString("MAC"));
                    cbAcces.setSelectedItem(rs.getString("Accesorios"));  
                }
            
            
        }catch(SQLException ex)
        {
            System.out.println(ex.toString() +"Evento clic tabla");
        }
    }//GEN-LAST:event_TablaInvenMouseClicked

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
        // Editar
        String cb1 = cbMarca.getSelectedItem().toString();
        String cb2 = cbPro.getSelectedItem().toString();
        String cb3 = cbEstado.getSelectedItem().toString();
        String cb4 = cbAlm.getSelectedItem().toString();
        String cb5 = bxRam.getSelectedItem().toString();
        String cb6 = cbAcces.getSelectedItem().toString();
        
        int Fila = TablaInven.getSelectedRow();
        if (jTextField3.getText().equals("") || jTextField1.getText().equals("") || cb1.equals("Seleccione...") || cb2.equals("Seleccione...") || cb3.equals("Seleccione...") 
                || cb4.equals("Seleccione...") || cb5.equals("Seleccione...") || txtmac.getText().equals("") || cb6.equals("Seleccione...") ) {
            JOptionPane.showMessageDialog(null, "Por favor diligencie en su totalidad todos los campos para actualizar");           
        }else{    
            //Preparo la consulta
            PreparedStatement ps = null;
            try{
                    java.sql.Connection con = conn.getConnection();
                    
                    ps = con.prepareStatement("UPDATE inventario SET Numero=?,Marca=?, Procesador=?, Estado=?, Almacenamiento=?,MemoriaRAM=?, MAC=?, Accesorios=? WHERE idInventario=?");                   
                    ps.setString(1, jTextField1.getText());
                    ps.setString(2, cbMarca.getSelectedItem().toString());                   
                    ps.setString(3, cbPro.getSelectedItem().toString());                                     
                    ps.setString(4, cbEstado.getSelectedItem().toString());
                    ps.setString(5, cbAlm.getSelectedItem().toString());               
                    ps.setString(6, bxRam.getSelectedItem().toString());
                    ps.setString(7, txtmac.getText());                          
                    ps.setString(8, cbAcces.getSelectedItem().toString());
                    ps.setString(9,jTextField3.getText());
                    ps.executeUpdate();
                    
                    /*el error radicaba en que el ps lo debo guardar en el mismo orden que los campos de la
                    consulta de actualizacion, no estabe en ese orden*/
                    
                    //Creo un mensaje si el cliente fue modificado en forma exitosa
                    JOptionPane.showMessageDialog(null, "Usuario actualizado correctamente");
                    //Realizo la actualizacion en cada uno de los campos
                    TablaInven.setValueAt(jTextField3.getText(), Fila, 0);
                    TablaInven.setValueAt(jTextField1.getText(), Fila, 1);
                    TablaInven.setValueAt(cbMarca.getSelectedItem().toString(), Fila, 2);
                    TablaInven.setValueAt(cbPro.getSelectedItem().toString(), Fila, 3);
                    TablaInven.setValueAt(cbEstado.getSelectedItem().toString(), Fila, 4);
                    TablaInven.setValueAt(cbAlm.getSelectedItem().toString(), Fila, 5);              
                    TablaInven.setValueAt(bxRam.getSelectedItem().toString(), Fila, 6);                  
                    TablaInven.setValueAt(txtmac.getText(), Fila, 7);
                    TablaInven.setValueAt(cbAcces.getSelectedItem().toString(), Fila, 8);
                    limpiar();     
            }catch(SQLException ex)
            {
                JOptionPane.showMessageDialog(null, "Error al Modificar inventario");
                System.out.println(ex);
            }
        }    
    }//GEN-LAST:event_jButton1ActionPerformed

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        limpiar();     
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
        this.hide();
    }//GEN-LAST:event_jButton4ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
        // Registrar nuevo
        this.hide();
        JOptionPane.showMessageDialog(null, "Debera regitrar antes un equipo y asignarlo a un usuario");
        RegistroInv inv = new RegistroInv();
        inv.show();
    }//GEN-LAST:event_jButton2ActionPerformed

    private void cbAccesActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cbAccesActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cbAccesActionPerformed

    private void txtmacActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtmacActionPerformed
        // TODO add your handling code here:
        txtmac.setText(txtmac.getText().toUpperCase());
    }//GEN-LAST:event_txtmacActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(VerInventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(VerInventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(VerInventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(VerInventario.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new VerInventario().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTable TablaInven;
    private javax.swing.JComboBox<String> bxRam;
    private javax.swing.JComboBox<String> cbAcces;
    private javax.swing.JComboBox<String> cbAlm;
    private javax.swing.JComboBox<String> cbEstado;
    private javax.swing.JComboBox<String> cbMarca;
    private javax.swing.JComboBox<String> cbPro;
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel10;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JLabel jLabel8;
    private javax.swing.JLabel jLabel9;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTextField jTextField1;
    private javax.swing.JTextField jTextField3;
    private javax.swing.JTextField txtmac;
    // End of variables declaration//GEN-END:variables
private void limpiar()
    {
        this.jButton1.setEnabled(true);
        
        jTextField3.setText(""); 
        jTextField1.setText("");
        cbPro.setSelectedItem("Seleccione...");
        txtmac.setText("");      
        cbMarca.setSelectedItem("Seleccione...");     
        cbEstado.setSelectedItem("Seleccione...");  
        cbAlm.setSelectedItem("Seleccione...");       
        bxRam.setSelectedItem("Seleccione...");  
        cbAcces.setSelectedItem("Seleccione...");
    }
}
